# Generated by Django 5.0.2 on 2025-10-02 06:53

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="RentalProvider",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "address_line_1",
                    models.CharField(max_length=255, verbose_name="address line 1"),
                ),
                (
                    "address_line_2",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="address line 2"
                    ),
                ),
                ("city", models.CharField(max_length=100, verbose_name="city")),
                (
                    "state",
                    models.CharField(
                        default="Kerala", max_length=100, verbose_name="state"
                    ),
                ),
                (
                    "postal_code",
                    models.CharField(max_length=10, verbose_name="postal code"),
                ),
                (
                    "country",
                    models.CharField(
                        default="India", max_length=100, verbose_name="country"
                    ),
                ),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True,
                        decimal_places=7,
                        max_digits=10,
                        null=True,
                        verbose_name="latitude",
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True,
                        decimal_places=7,
                        max_digits=10,
                        null=True,
                        verbose_name="longitude",
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="name")),
                (
                    "slug",
                    models.SlugField(max_length=200, unique=True, verbose_name="slug"),
                ),
                (
                    "contact_person",
                    models.CharField(max_length=100, verbose_name="contact person"),
                ),
                ("phone", models.CharField(max_length=20, verbose_name="phone")),
                (
                    "email",
                    models.EmailField(blank=True, max_length=254, verbose_name="email"),
                ),
                (
                    "license_number",
                    models.CharField(max_length=50, verbose_name="license number"),
                ),
                (
                    "established_year",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="established year"
                    ),
                ),
                (
                    "is_verified",
                    models.BooleanField(default=False, verbose_name="is verified"),
                ),
                (
                    "commission_rate",
                    models.DecimalField(
                        decimal_places=2,
                        default=10.0,
                        max_digits=5,
                        verbose_name="commission rate",
                    ),
                ),
            ],
            options={
                "verbose_name": "Rental Provider",
                "verbose_name_plural": "Rental Providers",
                "db_table": "rental_providers",
            },
        ),
        migrations.CreateModel(
            name="Vehicle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                ("name", models.CharField(max_length=200, verbose_name="name")),
                (
                    "slug",
                    models.SlugField(max_length=200, unique=True, verbose_name="slug"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="is active"),
                ),
                (
                    "is_featured",
                    models.BooleanField(default=False, verbose_name="is featured"),
                ),
                (
                    "published_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="published at"
                    ),
                ),
                (
                    "meta_title",
                    models.CharField(
                        blank=True, max_length=160, verbose_name="meta title"
                    ),
                ),
                (
                    "meta_description",
                    models.TextField(
                        blank=True, max_length=320, verbose_name="meta description"
                    ),
                ),
                (
                    "meta_keywords",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="meta keywords"
                    ),
                ),
                (
                    "vehicle_type",
                    models.CharField(
                        choices=[
                            ("bike", "Motorcycle/Scooter"),
                            ("car", "Car"),
                            ("suv", "SUV"),
                            ("bus", "Bus/Tempo Traveller"),
                            ("auto", "Auto Rickshaw"),
                        ],
                        max_length=20,
                        verbose_name="vehicle type",
                    ),
                ),
                ("brand", models.CharField(max_length=100, verbose_name="brand")),
                ("model", models.CharField(max_length=100, verbose_name="model")),
                (
                    "year",
                    models.PositiveIntegerField(verbose_name="year of manufacture"),
                ),
                ("color", models.CharField(max_length=50, verbose_name="color")),
                (
                    "fuel_type",
                    models.CharField(
                        choices=[
                            ("petrol", "Petrol"),
                            ("diesel", "Diesel"),
                            ("electric", "Electric"),
                            ("hybrid", "Hybrid"),
                        ],
                        max_length=20,
                        verbose_name="fuel type",
                    ),
                ),
                (
                    "transmission",
                    models.CharField(
                        choices=[
                            ("manual", "Manual"),
                            ("automatic", "Automatic"),
                            ("cvt", "CVT"),
                        ],
                        max_length=20,
                        verbose_name="transmission",
                    ),
                ),
                (
                    "seating_capacity",
                    models.PositiveIntegerField(verbose_name="seating capacity"),
                ),
                (
                    "mileage",
                    models.CharField(blank=True, max_length=50, verbose_name="mileage"),
                ),
                (
                    "registration_number",
                    models.CharField(
                        max_length=20, unique=True, verbose_name="registration number"
                    ),
                ),
                (
                    "insurance_valid_till",
                    models.DateField(verbose_name="insurance validity"),
                ),
                (
                    "pollution_certificate_valid_till",
                    models.DateField(verbose_name="pollution certificate validity"),
                ),
                (
                    "price_per_day",
                    models.DecimalField(
                        decimal_places=2, max_digits=8, verbose_name="price per day"
                    ),
                ),
                (
                    "price_per_hour",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=6,
                        null=True,
                        verbose_name="price per hour",
                    ),
                ),
                (
                    "weekly_discount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=5,
                        verbose_name="weekly discount %",
                    ),
                ),
                (
                    "monthly_discount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=5,
                        verbose_name="monthly discount %",
                    ),
                ),
                (
                    "security_deposit",
                    models.DecimalField(
                        decimal_places=2, max_digits=8, verbose_name="security deposit"
                    ),
                ),
                (
                    "has_ac",
                    models.BooleanField(default=False, verbose_name="air conditioning"),
                ),
                (
                    "has_music_system",
                    models.BooleanField(default=False, verbose_name="music system"),
                ),
                (
                    "has_gps",
                    models.BooleanField(default=False, verbose_name="GPS navigation"),
                ),
                (
                    "has_toolkit",
                    models.BooleanField(default=True, verbose_name="basic toolkit"),
                ),
                (
                    "minimum_age",
                    models.PositiveIntegerField(
                        default=18, verbose_name="minimum driver age"
                    ),
                ),
                (
                    "license_required",
                    models.BooleanField(
                        default=True, verbose_name="driving license required"
                    ),
                ),
                (
                    "advance_booking_hours",
                    models.PositiveIntegerField(
                        default=2, verbose_name="advance booking hours"
                    ),
                ),
                (
                    "cover_image",
                    models.ImageField(
                        upload_to="vehicles/covers/", verbose_name="cover image"
                    ),
                ),
                (
                    "gallery_images",
                    models.JSONField(
                        blank=True, default=list, verbose_name="gallery images"
                    ),
                ),
                (
                    "is_available",
                    models.BooleanField(
                        default=True, verbose_name="currently available"
                    ),
                ),
                (
                    "provider",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="vehicles",
                        to="rentals.rentalprovider",
                    ),
                ),
            ],
            options={
                "verbose_name": "Vehicle",
                "verbose_name_plural": "Vehicles",
                "db_table": "rental_vehicles",
                "ordering": ["-is_featured", "vehicle_type", "price_per_day"],
            },
        ),
    ]
